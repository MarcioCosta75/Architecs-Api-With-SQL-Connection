// <auto-generated />
using ApiWithSQLConnection.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiWithSQLConnection.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240108142935_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.Decade", b =>
                {
                    b.Property<int>("DecadeValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("DecadeValue");

                    b.ToTable("Decades");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.GovPolicy_Decade", b =>
                {
                    b.Property<int>("PolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Decade")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PolicyID");

                    b.ToTable("GovPolicy_Decades");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.GovernmentPolicy_Performance", b =>
                {
                    b.Property<int>("PolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PolicyID");

                    b.ToTable("GovernmentPolicy_Performances");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.Government_Policy", b =>
                {
                    b.Property<int>("PolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Impact")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PolicyID");

                    b.ToTable("Government_Policies");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.Neighborhood", b =>
                {
                    b.Property<int>("NeighborhoodID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("NeighborhoodID");

                    b.ToTable("Neighborhoods");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.Price", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Decade")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PropertyID");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.Property", b =>
                {
                    b.Property<int>("PropertyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PropertyID");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.PropertyPricePer_Decade", b =>
                {
                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<int>("Decade")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PropertyID", "Decade");

                    b.ToTable("PropertyPricePer_Decades");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.PublicSentiment", b =>
                {
                    b.Property<int>("SentimentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("SentimentScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("SentimentID");

                    b.ToTable("PublicSentiments");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.PublicSentiment_Decade", b =>
                {
                    b.Property<int>("SentimentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Decade")
                        .HasColumnType("int");

                    b.Property<decimal>("SentimentScore")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SentimentID");

                    b.ToTable("PublicSentiment_Decades");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.PublicSentiment_Neighborhood", b =>
                {
                    b.Property<int>("SentimentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NeighborhoodID")
                        .HasColumnType("int");

                    b.Property<decimal>("SentimentScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("SentimentID");

                    b.ToTable("PublicSentiment_Neighborhoods");
                });

            modelBuilder.Entity("ApiWithSQLConnection.Models.Database.Region", b =>
                {
                    b.Property<int>("RegionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("RegionID");

                    b.ToTable("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
